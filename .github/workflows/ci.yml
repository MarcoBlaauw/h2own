name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

env:
  PNPM_VERSION: 9
  NODE_VERSION: 20

jobs:
  quality-checks:
    name: Lint and unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('package.json', 'api/package.json', 'web/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install API dependencies
        working-directory: api
        run: pnpm install --frozen-lockfile=false

      - name: Install web dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile=false

      - name: Lint
        run: pnpm lint

      - name: Check formatting
        run: pnpm format:check

      - name: Run API unit tests
        run: pnpm test

      - name: Run web unit tests
        run: pnpm test:web

  e2e-smoke-tests:
    name: End-to-end smoke tests
    needs: quality-checks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('package.json', 'api/package.json', 'web/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install API dependencies
        working-directory: api
        run: pnpm install --frozen-lockfile=false

      - name: Install web dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile=false

      - name: Run end-to-end smoke tests
        run: pnpm test:e2e
